<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated 13-mar-2016 20:56:29 by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
  <class catalog="platypus" name="model.Usuarios" optimistic-lock="version" table="usuarios">
    <id name="id" type="java.lang.Integer">
      <column name="id"/>
      <generator class="identity"/>
    </id>
    <many-to-one class="model.UsuariosTipos" fetch="select" name="usuariosTipos">
      <column name="tipo" not-null="true"/>
    </many-to-one>
    <property name="email" type="string">
      <column name="email" not-null="true"/>
    </property>
    <property name="password" type="string">
      <column length="100" name="password" not-null="true"/>
    </property>
    <property name="nombre" type="string">
      <column name="nombre"/>
    </property>
    <property name="apellido1" type="string">
      <column name="apellido1"/>
    </property>
    <property name="apellido2" type="string">
      <column name="apellido2"/>
    </property>
    <property name="sexo" type="string">
      <column length="7" name="sexo"/>
    </property>
    <property name="fechaNacimiento" type="date">
      <column length="10" name="fechaNacimiento"/>
    </property>
    <property name="puntos" type="java.lang.Float">
      <column name="puntos" precision="12" scale="0"/>
    </property>
    <property name="idRango" type="int">
      <column name="id_rango" not-null="true"/>
    </property>
    <property name="idDireccion" type="java.lang.Integer">
      <column name="id_direccion"/>
    </property>
    <property name="contadorLogins" type="int">
      <column name="contadorLogins" not-null="true"/>
    </property>
    <property name="fechaUltimoLogin" type="date">
      <column length="10" name="fechaUltimoLogin">
        <comment>Para saber h√°bitos del usuario y/o si ha 'abandonado' la cuenta</comment>
      </column>
    </property>
    <set fetch="select" inverse="true" lazy="true" name="restaurantesLikeses" table="restaurantes_likes">
      <key>
        <column name="id_usuario" not-null="true"/>
      </key>
      <one-to-many class="model.RestaurantesLikes"/>
    </set>
    <set fetch="select" inverse="true" lazy="true" name="comentarioses" table="comentarios">
      <key>
        <column name="id_usuario" not-null="true"/>
      </key>
      <one-to-many class="model.Comentarios"/>
    </set>
    <set fetch="select" inverse="true" lazy="true" name="reservases" table="reservas">
      <key>
        <column name="id_usuario" not-null="true"/>
      </key>
      <one-to-many class="model.Reservas"/>
    </set>
    <set fetch="select" inverse="true" lazy="true" name="comentariosLikeses" table="comentarios_likes">
      <key>
        <column name="id_usuario" not-null="true"/>
      </key>
      <one-to-many class="model.ComentariosLikes"/>
    </set>
    <one-to-one class="model.Direcciones" name="direcciones"/>
    <set fetch="select" inverse="true" lazy="true" name="restauranteses" table="restaurantes">
      <key>
        <column name="id_usuario" not-null="true"/>
      </key>
      <one-to-many class="model.Restaurantes"/>
    </set>
    <one-to-one class="model.Rangos" name="rangos"/>
    <set fetch="select" inverse="true" lazy="true" name="consultases" table="consultas">
      <key>
        <column name="id_usuario" not-null="true"/>
      </key>
      <one-to-many class="model.Consultas"/>
    </set>
    
    <!-- Named queries -->
    <sql-query name="getAll">
        <![CDATA[select * from Usuarios u]]>
    </sql-query>
    <sql-query name="getUserById">
        <![CDATA[select * from Usuarios u where u.id=:ID]]>
    </sql-query>
    <sql-query name="findUser">
        <![CDATA[select u.nombre, u.apellido1, u.apellido2, u.sexo, u.email, u.puntos from Usuarios u 
                 where u.nomre like :TEXTO or u.apellido1 like :TEXTO or u.apelido2 like :TEXTO]]>
    </sql-query>

  </class>
</hibernate-mapping>
